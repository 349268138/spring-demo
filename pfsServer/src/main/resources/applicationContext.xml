<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:crane="http://code.dianping.com/schema/crane"
       default-autowire="byName"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
        http://code.dianping.com/schema/crane
        http://code.dianping.com/schema/crane/crane-1.0.xsd"
>

    <context:property-placeholder location="classpath*:conf/prod/*.properties,
    classpath*:conf/${env.name}/*.properties,
    classpath*:jetty/boot.properties,
    classpath*:META-INF/app.properties"/>

    <bean id="rpcUserMergeQueryService" class="com.meituan.service.mobile.mtthrift.proxy.ThriftClientProxy"
          destroy-method="destroy" lazy-init="false">
        <property name="serviceInterface" value="com.sankuai.wpt.user.merge.query.thrift.message.UserMergeQueryService"/>
        <property name="appKey" value="${app.name}"/>
        <property name="remoteAppkey" value="com.sankuai.mtusercenter.merge.query"/>
        <property name="timeout" value="200"/>
        <property name="retryRequest" value="true"/>
        <property name="mtThriftPoolConfig" ref="mergeQueryThriftPoolConfig"/>
    </bean>
    <bean id="mergeQueryThriftPoolConfig" class="com.meituan.service.mobile.mtthrift.client.pool.MTThriftPoolConfig">
        <property name="maxActive" value="100"/>
        <property name="maxIdle" value="20"/>
        <property name="minIdle" value="1"/>
        <property name="maxWait" value="300"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="false"/>
    </bean>

    <bean id="rpcTokenService" class="com.meituan.service.mobile.mtthrift.proxy.ThriftClientProxy"
          destroy-method="destroy">
        <property name="mtThriftPoolConfig" ref="mergeQueryThriftPoolConfig"/>
        <property name="timeout" value="200"/>
        <property name="retryRequest" value="true"/>
        <property name="serviceInterface" value="com.sankuai.wpt.user.thrift.token.UserValidateTokenService"/>
        <property name="appKey" value="${app.name}"/>
        <property name="remoteAppkey" value="com.sankuai.wpt.user.token"/>
    </bean>

    <bean id="mtSSOFilter" class="com.sankuai.it.sso.sdk.spring.FilterFactoryBean">
        <!-- 必须配置，以下二者需先到开放平台(http://open.sankuai.com)申请接入SSO后颁发，
             对应企平开放平台的AppKey和AppSecret -->
        <property name="clientId" value="${sso.client.id}"/>
        <property name="secret" value="${sso.secret}"/>

        <!-- 需要 SSO 检查的 Url 配置, 多个以逗号分隔，允许换行
             单独配 includedUriList，includedUriList 以外的链接都不检查sso登录
                 单独配 excludedUriList，excludedUriList 以外的链接都会检查sso登录
                 includedUriList，excludedUriList 都有的时候，仅includedUriList有效，匹配路径{**} -->
        <property name="includedUriList" value="/api/**"/>
        <property name="ssoListener" value="com.meituan.pay.finsecurity.listener.SecuritySSOListener"/>

    </bean>

    <bean id="uacAuthFilter" class="com.sankuai.meituan.uac.sdk.filter.UacFilterFactoryBean">
        <!--必须配置，以下二者需先到开放平台(http://open.sankuai.com)申请接入UAC后颁发，对应企平开放平台的AppKey和AppSecret -->
        <property name="appKey" value="${uac.appKey}"/>
        <property name="secret" value="${uac.appSecret}"/>

        <!--接入的UAC HOST地址，线下为：http://uac.it.test.sankuai.com 线上为：http://uac.vip.sankuai.com -->
        <property name="host" value="${uac.host}"/>

        <!-- 表示需要经过UAC鉴权的URI，多个之间以','分割,支持Ant风格路径表达式。includedUriList中的URI必须经过SSO进行过滤，否则UAC无法获取当前登录人信息进行鉴权。 -->
        <property name="includedUriList" value="/api/**" />
    </bean>

    <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>

    <context:component-scan base-package="com.meituan.pay.finsecurity.controller"/>
    <context:component-scan base-package="com.meituan.pay.finsecurity.service"/>
    <context:component-scan base-package="com.meituan.pay.finsecurity.adapter"/>
    <context:component-scan base-package="com.meituan.pay.finsecurity.cron"/>
    <context:component-scan base-package="com.meituan.pay.finsecurity.utils"/>


    <import resource="/spring/thrift-server.xml"/>
    <import resource="/spring/spring-client.xml"/>
    <import resource="/spring/spring-kms.xml"/>
    <import resource="/spring/spring-mvc.xml"/>
    <import resource="/spring/spring-squirrel.xml"/>
    <import resource="/spring/spring-db.xml"/>
    <crane:annotation-driven/>
</beans>